{
	"info": {
		"_postman_id": "ae133d77-d0d5-4eb7-b0ba-3323f44cb09f",
		"name": "OIH_Framework_Showcase",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Flows",
			"item": [
				{
					"name": "Get all flows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows"
							]
						},
						"description": "Use this request to receive all flows for the authenticated user.\nPlease use the token generated in the POST login request for authorization."
					},
					"response": []
				},
				{
					"name": "Start a flow by id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows/{FLOW_ID}/start",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows",
								"{FLOW_ID}",
								"start"
							]
						},
						"description": "Use this request to start a certain flow by id"
					},
					"response": []
				},
				{
					"name": "Stop a flow by id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows/{FLOW_ID}/stop",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows",
								"{FLOW_ID}",
								"stop"
							]
						},
						"description": "Use this request to stop a certain flow."
					},
					"response": []
				},
				{
					"name": "Get flow by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows/{FLOW_ID}",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows",
								"{FLOW_ID}"
							]
						},
						"description": "Use this request to receive a cetrain flow by id."
					},
					"response": []
				},
				{
					"name": "Create a new flow",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n        \"name\": \"SnazzyToWiceAndCodeComponent\",\n        \"description\": \"This flow polls for persons and pushed them to webhook.site and wice crm.\",\n        \"graph\": {\n            \"nodes\": [\n                {\n                    \"id\": \"snazzy\",\n                    \"componentId\": \"5ce27d453860ff001a034274\",\n                    \"name\": \"\",\n                    \"function\": \"getPersonsPolling\",\n                    \"description\": \"\",\n                    \"fields\": {\n                        \"username\": \"\",\n                        \"password\": \"\"\n                    }\n                },\n                {\n                    \"id\": \"snazzy_transformer\",\n                    \"componentId\": \"5ce27f4b3860ff001a034277\",\n                    \"name\": \"\",\n                    \"function\": \"transformPersonToOih\",\n                    \"description\": \"\"\n                },\n                {\n                    \"id\": \"wice_transformer\",\n                    \"componentId\": \"5ce27f2d3860ff001a034276\",\n                    \"name\": \"\",\n                    \"function\": \"transformPersonFromOih\",\n                    \"description\": \"\"\n                },\n                {\n                    \"id\": \"wice_adapter\",\n                    \"componentId\": \"5ce27d653860ff001a034275\",\n                    \"name\": \"\",\n                    \"function\": \"upsertPerson\",\n                    \"description\": \"\",\n                    \"fields\": {\n                        \"username\": \"\",\n                        \"password\": \"\",\n                        \"client_name\": \"\"\n                    }\n                },\n                {\n                    \"id\": \"code_component\",\n                    \"componentId\": \"5cde85443860ff001a034273\",\n                    \"name\": \"\",\n                    \"function\": \"execute\",\n                    \"description\": \"\",\n                    \"fields\": {\n                        \"code\": \"function* run() {console.log('Calling external URL');yield request.post({uri: 'http://webhook.site/ae17e5b3-1da6-4d2b-b664-4787ad5953d5', body: msg.body, json: true});}\"\n                    }\n                }\n            ],\n            \"edges\": [\n                {\n                    \"source\": \"snazzy\",\n                    \"target\": \"snazzy_transformer\"\n                },\n                {\n                    \"source\": \"snazzy_transformer\",\n                    \"target\": \"wice_transformer\"\n                },\n                {\n                    \"source\": \"wice_transformer\",\n                    \"target\": \"code_component\"\n                },\n                {\n                    \"source\": \"wice_transformer\",\n                    \"target\": \"wice_adapter\"\n                }\n            ]\n        },\n        \"type\": \"ordinary\",\n        \"cron\": \"*/3 * * * *\",\n        \"owners\": []\n    }"
						},
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows"
							]
						},
						"description": "Use this request to post a new flow."
					},
					"response": []
				},
				{
					"name": "Update a flow by id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "        {\n        \"cron\": \"* * * * * *\"\n        }"
						},
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows/{FLOW_ID}",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows",
								"{FLOW_ID}"
							]
						},
						"description": "Use this request to update an existing flow."
					},
					"response": []
				},
				{
					"name": "Delete a flow by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://flow-repository.openintegrationhub.com/flows/{FLOW_ID}",
							"protocol": "http",
							"host": [
								"flow-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"flows",
								"{FLOW_ID}"
							]
						}
					},
					"response": []
				}
			],
			"description": "All flow relating requests. "
		},
		{
			"name": "Components",
			"item": [
				{
					"name": "Get user components",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://component-repository.openintegrationhub.com/components",
							"protocol": "http",
							"host": [
								"component-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"components"
							]
						},
						"description": "Use this request to receive all available components for the authenticated user."
					},
					"response": []
				},
				{
					"name": "Create a new component",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"name\": \"MS Office transformer\",\r\n    \"description\": \"MS Office transformer for the OIH\",\r\n    \"access\": \"public\",\r\n    \"descriptor\": {},\r\n    \"distribution\": {\r\n      \"type\": \"docker\",\r\n      \"image\": \"openintegrationhub/ms-office-transformer:latest\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "http://component-repository.openintegrationhub.com/components",
							"protocol": "http",
							"host": [
								"component-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"components"
							]
						},
						"description": "Use this request to post a new component."
					},
					"response": []
				},
				{
					"name": "Update a component by id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"distribution\": {\n            \"type\": \"docker\",\n            \"image\": \"elasticio/timer:ca9a6fea391ffa8f7c8593bd2a04143212ab63f6\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "http://component-repository.openintegrationhub.com/components/{COMPONENT_ID}",
							"protocol": "http",
							"host": [
								"component-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"components",
								"{COMPONENT_ID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a component by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://component-repository.openintegrationhub.com/components/{COMPONENT_ID}",
							"protocol": "http",
							"host": [
								"component-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"components",
								"{COMPONENT_ID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a component by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://component-repository.openintegrationhub.com/components/{COMPONENT_ID}",
							"protocol": "http",
							"host": [
								"component-repository",
								"openintegrationhub",
								"com"
							],
							"path": [
								"components",
								"{COMPONENT_ID}"
							]
						},
						"description": "Use this request to get a component by its id."
					},
					"response": []
				}
			],
			"description": "All component relating requests."
		},
		{
			"name": "Logs",
			"item": [
				{
					"name": "Get Logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Create a new log",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metadata",
			"item": [
				{
					"name": "Create a new domain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"name\": \"Addresses\",\r\n    \"description\": \"Address Domain for test purposes\",\r\n    \"public\": true,\r\n    \"owners\": []\r\n  }\r\n}"
						},
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all domains",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a domain by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get models for specific domain",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}/schemas",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}",
								"schemas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get model for specific domain by uri",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}/schemas/{URI}",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}",
								"schemas",
								"{URI}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a domain by id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"data\": {\r\n    \"name\": \"string\",\r\n    \"description\": \"string\",\r\n    \"public\": true,\r\n    \"owners\": [\r\n      {\r\n        \"id\": \"string\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"id\": \"string\",\r\n    \"createdAt\": \"2019-06-03T13:04:11.089Z\",\r\n    \"updatedAt\": \"2019-06-03T13:04:11.089Z\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import new models",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": {\r\n    \"type\": \"object\",\r\n    \"required\": [\r\n      \"street_address\",\r\n      \"city\",\r\n      \"state\"\r\n    ],\r\n    \"properties\": {\r\n      \"street_address\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"city\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"state\": {\r\n        \"type\": \"string\"\r\n      }\r\n    }\r\n  },\r\n  \"person\": {\r\n    \"type\": \"object\",\r\n    \"required\": [\r\n      \"first_name\",\r\n      \"last_name\"\r\n    ],\r\n    \"properties\": {\r\n      \"first_name\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"last_name\": {\r\n        \"type\": \"string\"\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}/import",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update model by uri",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"address\": {\r\n    \"type\": \"object\",\r\n    \"required\": [\r\n      \"street_address\",\r\n      \"city\",\r\n      \"state\"\r\n    ],\r\n    \"properties\": {\r\n      \"street_address\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"city\": {\r\n        \"type\": \"string\"\r\n      },\r\n      \"state\": {\r\n        \"type\": \"string\"\r\n      }\r\n    }\r\n  }\r\n}\r\n"
						},
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}/schemas/{URI}",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}",
								"schemas",
								"{URI}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a model by uri",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://metadata.openintegrationhub.com/api/v1/domains/{DOMAIN_ID}/schemas/{URI}",
							"protocol": "http",
							"host": [
								"metadata",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"domains",
								"{DOMAIN_ID}",
								"schemas",
								"{URI}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Identity and Access Management",
			"item": [
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": false
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"\",\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "http://iam.openintegrationhub.com/login?username=&password=",
							"protocol": "http",
							"host": [
								"iam",
								"openintegrationhub",
								"com"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": ""
								},
								{
									"key": "password",
									"value": ""
								}
							]
						},
						"description": "This request must be used to login and receive the token."
					},
					"response": []
				},
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://iam.openintegrationhub.com/api/v1/users",
							"protocol": "http",
							"host": [
								"iam",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"\",\n    \"firstname\": \"\",\n    \"lastname\": \"\",\n    \"role\": \"\",\n    \"password\": \"\",\n    \"permissions\": []\n}"
						},
						"url": {
							"raw": "http://iam.openintegrationhub.com/api/v1/users",
							"protocol": "http",
							"host": [
								"iam",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user by id",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"_id\": \"{ID}\",\n        \"status\": \"ACTIVE\",\n        \"confirmed\": true,\n        \"role\": \"USER\",\n        \"permissions\": [],\n        \"username\": \"{USERNAME}\",\n        \"firstname\": \"\",\n        \"lastname\": \"\",\n        \"memberships\": [],\n        \"createdAt\": \"2019-05-22T12:25:28.082Z\",\n        \"updatedAt\": \"2019-05-22T12:57:15.083Z\",\n        \"__v\": 0\n    }"
						},
						"url": {
							"raw": "http://iam.openintegrationhub.com/api/v1/users/{USER_ID}",
							"protocol": "http",
							"host": [
								"iam",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{USER_ID}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://iam.openintegrationhub.com/api/v1/users/{USER_ID}",
							"protocol": "http",
							"host": [
								"iam",
								"openintegrationhub",
								"com"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{USER_ID}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{currentAccessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cb3e5496-f966-4583-8d1a-665738b7b4a5",
				"type": "text/javascript",
				"exec": [
					"  async function preRequest(){",
						"  ",
						"    //Setting username and password",
						"    const username = \"{YOUR_USERNAME}\";",
						"    const password = \"{YOUR_PASSWORD}\";",
						"    let getToken = true;",
						"    ",
						"    //Configuring request",
						"    const echoPostRequest = {",
						"      url: `http://iam.openintegrationhub.com/login?username=${username}&password=${password}`,",
						"      method: 'POST',",
						"      header: 'Content-Type:application/json'",
						"    };",
						"    ",
						"    ",
						"    ",
						"    //Check token and expiry date",
						"    if (!pm.environment.get('accessTokenExpiry') || ",
						"        !pm.environment.get('currentAccessToken')) {",
						"        console.log('Token or expiry date are missing')",
						"    } else if (pm.environment.get('accessTokenExpiry') <= (new Date()).getTime()) {",
						"        console.log('Token is expired')",
						"    } else {",
						"        getToken = false;",
						"        console.log('Token and expiry date are all good');",
						"    }",
						"    ",
						"    //Check token validity",
						"    if (getToken === false) {",
						"        ",
						"        const echoValidationRequest = {",
						"            method: 'GET',",
						"            url: `http://flow-repository.openintegrationhub.com/flows`,",
						"            header: `Authorization:Bearer ${pm.environment.get('currentAccessToken')}`,",
						"        };",
						"",
						"        pm.sendRequest(echoValidationRequest, (err,res) => {",
						"            if (err === null) {",
						"                const jsonResult = res.json();",
						"                if (jsonResult.errors && jsonResult.errors[0].code === 401){",
						"                    getToken = true;",
						"",
						"                    pm.sendRequest(echoPostRequest, function (err, res) {",
						"                        if (err === null) {",
						"                               ",
						"                        console.log('Saving the token and expiry date');",
						"                        ",
						"                        let responseJson = res.json();",
						"                        pm.environment.set('currentAccessToken', responseJson.token);",
						"                    ",
						"                        let expiryDate = new Date();",
						"                        expiryDate.setSeconds(expiryDate.getSeconds() + 7200);",
						"                        pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
						"                        }",
						"                    });",
						"                } else {",
						"                    getToken = false;",
						"                }",
						"            } else {",
						"                console.log('Error while making request');",
						"            }",
						"        });",
						"",
						"        console.log(`FLAG 4 with getToken value: ${JSON.stringify(getToken)}`);",
						"",
						"    }",
						"    ",
						"    //Fetch a new token and expiry date",
						"    if (getToken === true) {",
						"        pm.sendRequest(echoPostRequest, function (err, res) {",
						"        console.log(err ? err : res.json());",
						"            if (err === null) {",
						"                console.log('Saving the token and expiry date');",
						"                var responseJson = res.json();",
						"                pm.environment.set('currentAccessToken', responseJson.token);",
						"        ",
						"                var expiryDate = new Date();",
						"                expiryDate.setSeconds(expiryDate.getSeconds() + 7200);",
						"                pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
						"            }",
						"        });",
						"    }",
						"}",
						"",
						"preRequest();"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0d550853-a164-4f9b-ba27-b9bcbcac460a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "34c2838b-f668-4447-9459-2e8b800bebea",
			"key": "currentAccessToken",
			"value": " ",
			"type": "string",
			"disabled": true
		},
		{
			"id": "29ecac80-2bc9-43df-a072-f3c9ee03f10f",
			"key": "accessTokenExpiry",
			"value": " ",
			"type": "string",
			"disabled": true
		}
	]
}