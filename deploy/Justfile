services-root := "../services"

# Generate default configmap & secret files for overlays
generate-config ns="oih-dev-ns" overlay="overlays/dev":
	#!/usr/bin/env bash
	mkdir -p {{overlay}}/config
	extract_service() { basename $(dirname $(dirname $(dirname "$1"))); }
	motd() {
	  [ -f "$1" ] && rm "$1"
	  echo "# Autogenerated by \`just deploy/generate ns={{ns}} overlay={{overlay}}\`" >> "$1"
	  echo "# ... further edit as needed" >> "$1"
	}
	ConfigMapJsonataExpr='$each(data, function($v, $k) {$k & "=" & $replace($v, ".default.", ".{{ns}}.")})'
	SecretJsonataExpr='$each(data, function($v, $k) {$k & "=" & $replace($base64decode($v), ".default.", ".{{ns}}.")})'
	for configmap in $(fd -p 'k8s/.*/configmap.yaml' {{services-root}}) ; do
	  file="{{overlay}}/config/$(extract_service "$configmap").configmap"
	  echo "Extract ConfigMap: $configmap -> $file"
	  motd "$file"
	  yq r -j "$configmap" | jfq "$ConfigMapJsonataExpr" >> "$file"
	done
	for secret in $(fd -p 'k8s/.*/secret.yaml' {{services-root}}) ; do
	  file="{{overlay}}/config/$(extract_service "$secret").secret"
	  echo "Extract & decode Secret: $secret -> $file"
	  motd "$file"
	  yq r -j "$secret" | jfq "$SecretJsonataExpr" >> "$file"
	done

# Find REPLACE ME strings in config
find-replace-me overlay="overlays/dev":
	@rg --sortr path 'REPLACE ME' {{overlay}}

# Set all token values at once
replace-me-with overlay="overlays/dev" replacement="yourtoken":
	@rg -Nl 'IAM_TOKEN=REPLACE ME' {{overlay}} | xargs -n1 -I% sed -i 's/REPLACE ME/{{replacement}}/g' %
	@rg -Nl 'FLOW_TOKEN=REPLACE ME' {{overlay}} | xargs -n1 -I% sed -i 's/REPLACE ME/{{replacement}}/g' %
	# @rg -Nl 'GRAFANA_TOKEN=REPLACE ME' {{overlay}} | xargs -n1 -I% sed -i 's/REPLACE ME/{{replacement}}/g' %

