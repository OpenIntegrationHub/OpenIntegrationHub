openapi: 3.0.0
info:
  description: API for secret-service
  version: "2.1.0"
  title: Lynx Api for OIH
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: info@openintegrationhub.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: secrets
    description: secrets routes and definitions
  - name: audits
    description: audits routes and definitions
  - name: misc
    description: Health check & co
  - name: auth-clients
    description: Oauth 1&2, SAML, etc.
paths:
  /:
    get:
      tags:
        - misc
      summary: Service Info
      description: ''
      operationId: getServiceInfo
      responses:
        '200':
          description: Detailed service information
  /healthcheck:
    get:
      tags:
        - misc
      summary: Cluster tools
      description: ''
      operationId: performHealthCheck
      responses:
        '200':
          description: Service is healthy
  /auth-clients:
    get:
      tags:
        - auth-clients
      summary: get all platform auth clients
      description: This resource can only be accessed by platform admin
      operationId: getPlatformAuthClients
      responses:
        '200':
          description: get all oauth clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAuthClients'    
    post:
      tags:
        - auth-clients
      summary: Create a platform oauth client for a specific oauth provider
      description: Can only be done by an admin
      operationId: createPlatformAuthClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthClient'
      responses:
        '200':
          description: Success    
  '/auth-clients/:id':
    get:
      tags:
        - auth-clients
      summary: get auth client by id
      description: This resource can only be accessed by platform admin
      operationId: getPlatformAuthClientById
      responses:
        '200':
          description: Return oauth client data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthClient'    
    patch:
      tags:
        - auth-clients
      summary: Modify a platform oauth secret
      description: Can only be done by an admin
      operationId: updatePlatformAuthClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthClient'
      responses:
        '200':
          description: Success
  '/auth-clients/:id/start-flow':
    post:
      tags:
        - auth-clients
      summary: Start an authorization flow
      description: Can be done by any user
      operationId: startPlatformAuthFlow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthFlow'
      responses:
        '200':
          description: Success  
  /secrets:
    get:
      tags:
        - secrets
      summary: Get all secrets
      description: List all secrets the current user is elligible to view.
      operationId: getSecrets
      responses:
        '200':
          description: List of all secrets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfSecrets'
    post:
      tags:
        - secrets
      summary: Create a secret
      description: This can only be done by a logged in user who has the required privileges.
      operationId: createSecret
      requestBody:
        description: Create a secret
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          description: Success
  '/secrets/:id':
    get:
      tags:
        - secrets
      summary: get the secret by id
      description: This can only be done by a logged in user who has the required privileges.
      operationId: getSecretById
      responses:
        '200':
          description: Get a specific secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
      parameters:
        - name: id
          in: path
          description: Secret id
          required: true
          schema:
            type: string
          style: simple
    put:
      tags:
        - secrets
      summary: Modify the secret
      description: This can only be done by a logged in user who has the required privileges.
      operationId: modifySecretById
      requestBody:
        description: Replaces Secret data completely with the given payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          description: Success
      parameters:
        - name: id
          in: path
          description: Secret id
          required: true
          schema:
            type: string
          style: simple
    delete:
      tags:
        - secrets
      summary: Delete secret
      description: This can only be done by a logged in user who has the required privileges.
      operationId: deleteSecret
      parameters:
        - name: id
          in: path
          description: Secret id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: Success
  '/secrets/:id/audit':
    get:
      tags:
        - secrets
      summary: get audit data for a specific secret
      description: Requires a valid authentication and authorization. Users can view only audit logs for their secrets.
      operationId: getSecretAudit
      responses:
        '200':
          description: get audit data for specific secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAudits'
      parameters:
        - name: id
          in: path
          description: Secret id
          required: true
          schema:
            type: string
          style: simple
  /audits:
    get:
      tags:
        - audits
      summary: get audit data for specific organisation
      description: This can only be done by a logged in user who has the required privileges.
      operationId: getOrgAudit
      responses:
        '200':
          description: get audit data for specific secret
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfAudits'
                
  '/callback':
    get:
      tags:
        - callback
      summary: Invoked by Provider (redirect uri) or other services
      description: Should be called by service only
      operationId: callbackPlatformAuthFlow
      parameters:
        - in: path
          name: code
          schema:
            type: string
          required: true
          description: Authorization code to obtain access token from provider
        - in: path
          name: state
          schema:
            type: string
          required: true
          description: Base64Url encoded, contains auth flow id and meta data
      responses:
        '200':
          description: Success  
  
components:
  schemas:
    Secret:
      title: Secret body
      type: object
      properties:
        name:
          type: string
          description: Secret name
        owner:
          type: array
          items:
            $ref: '#/components/schemas/OwnerBody'
        type:
          type: string
          description: 'Secret type'
        value:
          oneOf:
            - $ref: "#/components/schemas/S_SIMPLE"
            - $ref: "#/components/schemas/S_API_KEY"
            - $ref: "#/components/schemas/S_OA2_AUTHORIZATION_CODE"
    S_SIMPLE:
      type: object
      required:
        - username
        - passphrase
      properties:
        username:
          type: string
        passphrase:
          type: string
    S_API_KEY:
      type: object
      required:
        - value
      properties:
        value:
          type: string
        headerName:
          type: string
    S_OA2_AUTHORIZATION_CODE:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        scope:
          type: string
        endpoint:
          type: object
          properties:
            token:
              type: string
          required:
            - token
        expires:
          type: string
        externalId:
          type: string
    AuthClient:
      title: Auth client
      type: object
      properties:
        name:
          type: string
          description: Auth client name
        owner:
          type: array
          items:
            $ref: '#/components/schemas/OwnerBody'
        type:
          type: string
          description: 'Client type'
        value:
          oneOf:
            - $ref: "#/components/schemas/C_OA2_AUTHORIZATION_CODE"
    C_OA2_AUTHORIZATION_CODE:
      type: object
      required:
        - clientId
        - clientSecret
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        predefinedScope:
          type: string
        mappings:
          type: object
          properties:
            scope:
              type: object
              properties:
                key:
                  type: string
              required:
              - key
            externalId:
              type: object
              properties:
                source:
                  type: string
                  enum: [id_token, access_token, userinfo]
                key:
                  type: string
              required:
              - source
              - key
        redirectUri:
          type: string
        endpoint:
          type: object
          properties:
            auth:
              type: string
            token:
              type: string
            userinfo:
              type: string
            revocation:
              type: string
            endSession:
              type: string
          required:
            - auth
            - token
    OwnerBody:
      title: Owner  object
      type: object
      properties:
        entityId:
          type: string
          description: Id of Owner entity
        entityType:
          type: string
          description: Type of Owner entity, e.g. GROUP, TENANT, USER, etc.
    AuditBody:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/OwnerBody'
        secret_id:
          type: string
          description: Id of the secret
        operation:
          type: string
          description: Which Operation was done, e.g. READ, UPDATE
        timestamp:
          type: string
          description: Timestamp of when the given operation was performed on this secret
    AuthFlow:
      type: object
      properties:
        scope:
          type: string
    ArrayOfAudits:
      type: array
      items:
        $ref: '#/components/schemas/AuditBody'
    ArrayOfSecrets:
      type: array
      items:
        $ref: '#/components/schemas/Secret'
    ArrayOfAuthClients:
      type: array
      items:
        $ref: '#/components/schemas/AuthClient'
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/basaas5/secret-service/1.0.0