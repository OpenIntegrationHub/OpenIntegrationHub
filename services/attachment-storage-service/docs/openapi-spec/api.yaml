openapi: 3.0.1
info:
  version: "v0.0.1"
  title: 'Maester'
  description: ''

components:
  securitySchemes:
    JWT:
      description: JWT token passed to sailor from outside (e.g. env var), which contains flowId, workspaceId, contractId
      type: http
      scheme: bearer
      bearerFormat: JWT
    ServiceAccount:
      description: Service account credentials
      type: http
      scheme: basic

  schemas:
    ObjectId:
      type: integer
    BatchDelete:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum:
            - started
            - running
            - completed
        cond:
          type: array
          minLength: 1
          items:
            type: object
            properties:
              key:
                description: 'Any value from JWT token: flowId, workspaceId, contractId etc.'
                type: string
              value:
                type: string


  parameters:
    ObjectId:
      name: id
      description: 'object id'
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ObjectId'
    ObjectRange:
      name: Range
      description: Object range
      in: header
      schema:
        type: 'string'

  examples:
    json:
      summary: 'json object'
      value: '{ "some": "json" }'
    xml:
      summary: 'xml object'
      value: '<xml>some</xml>'
    text:
      summary: 'plain text object'
      value: 'plain text'
    csv:
      summary: 'csv object'
      value: 'c,s,v'
    tsv:
      summary: 'tsv object'
      value: "t\t\ts\tv"
    binary:
      summary: 'binary object'
      value: BINARY DATA

  requestBodies:
    Object:
      required: true
      content:
        'application/json':
          schema:
            type: object
          example:
            $ref: '#/components/examples/json/value'
        'application/xml':
          example:
            $ref: '#/components/examples/xml/value'
        'text/plain':
          example:
            $ref: '#/components/examples/text/value'
        'text/csv':
          example:
            $ref: '#/components/examples/csv/value'
        'text/tsv':
          example:
            $ref: '#/components/examples/tsv/value'
        'application/octet-stream':
          example:
            $ref: '#/components/examples/binary/value'

  responses:
    ObjectNotFound:
      description: 'Object not found'
    ObjectRangeNotSatisfiable:
      description: 'Object range not satisfiable'
    TooManyObjectRequests:
      description: 'Too many object requests'
    ObjectTooLarge:
      description: 'Object too large'
    InvalidObjectId:
      description: 'Invalid object id'
  headers:
    ObjectTTL:
      description: 'Object TTL in ms'
      schema:
        description: 'Object TTL in ms'
        type: integer
    ObjectLength:
      description: 'Object length in bytes'
      schema:
        type: 'integer'
    ObjectRange:
      description: 'Object Range in bytes'
      schema:
        type: 'string'
      examples:
        bytes:
          value: 'bytes=0-1023'

security:
  - JWT: []

paths:
  /objects:
    get:
      summary: 'Get multiple objects'
      description: 'Returns multiple objects by ids with multipart response'
      parameters:
        - name: ids
          required: true
          in: query
          description: Object ids
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ObjectId'
      responses:
        '200':
          description: Successfully got objects
          content:
            'multipart/mixed':
              example: 'Content-Type: multipart/mixed; boundary=storage-object


                        --storage-object

                        Content-Type: application/json

                        X-TTL: 5184000000

                        Content-Length: 17

                        {"some": "json"}

                        --storage-object

                        Content-Type: application/octet-stream

                        X-TTL: 2592000000

                        Content-Length: 342346245

                        ...some porn video compressed in WebM

                        --storage-object
                        '
        '204':
          description: No objects found
        '422':
          description: Too many objects requested at once
        '429':
          $ref: '#/components/responses/TooManyObjectRequests'

  /objects/{id}:
    get:
      summary: 'Get object by id'
      description: 'Returns one object or part of it by requested range'
      parameters:
        - $ref: '#/components/parameters/ObjectId'
        - $ref: '#/components/parameters/ObjectRange'
      responses:
        '200':
          headers:
            'X-TTL':
              $ref: '#/components/headers/ObjectTTL'
            'Content-Length':
              $ref: '#/components/headers/ObjectLength'
          description: Successfully got a object
          content:
            'application/json':
              schema:
                type: object
              example:
                $ref: '#/components/examples/json/value'
            'application/xml':
              example:
                $ref: '#/components/examples/xml/value'
            'text/plain':
              example:
                $ref: '#/components/examples/text/value'
            'text/csv':
              example:
                $ref: '#/components/examples/csv/value'
            'text/tsv':
              example:
                $ref: '#/components/examples/tsv/value'
            'application/octet-stream':
              example:
                $ref: '#/components/examples/binary/value'
        '206':
          headers:
            'X-TTL':
              $ref: '#/components/headers/ObjectTTL'
            'Content-Range':
              $ref: '#/components/headers/ObjectRange'
            'Content-Length':
              $ref: '#/components/headers/ObjectLength'
          description: Successfully got a part of object
          content:
            'text/plain':
              example:
                $ref: '#/components/examples/text/value'
            'text/csv':
              example:
                $ref: '#/components/examples/csv/value'
            'text/tsv':
              example:
                $ref: '#/components/examples/tsv/value'
            'application/octet-stream':
              example:
                $ref: '#/components/examples/binary/value'
        '404':
          $ref: '#/components/responses/ObjectNotFound'
        '416':
          $ref: '#/components/responses/ObjectRangeNotSatisfiable'
        '429':
          $ref: '#/components/responses/TooManyObjectRequests'
    put:
      summary: 'Create a object'
      description: 'Creates a object with user-generated id'
      parameters:
        - $ref: '#/components/parameters/ObjectId'
        - $ref: '#/components/parameters/ObjectRange'
      requestBody:
        $ref: '#/components/requestBodies/Object'
      responses:
        '201':
          description: 'Successfully created a object'
        '400':
          $ref: '#/components/responses/InvalidObjectId'
        '416':
          $ref: '#/components/responses/ObjectRangeNotSatisfiable'
        '429':
          $ref: '#/components/responses/TooManyObjectRequests'
        '409':
          description: 'Object already exists'
        '415':
          description: 'Object type not supported or missing'
        '413':
          $ref: '#/components/responses/ObjectTooLarge'
    patch:
      summary: 'Patch a object'
      description: 'Patch a object range, if no range provided entire object is updated (including content-type)'
      parameters:
        - $ref: '#/components/parameters/ObjectId'
        - $ref: '#/components/parameters/ObjectRange'
      requestBody:
        $ref: '#/components/requestBodies/Object'
      responses:
        '200':
          description: Successfully updated a object
          headers:
            'X-TTL':
              $ref: '#/components/headers/ObjectTTL'
            'Content-Range':
              $ref: '#/components/headers/ObjectRange'
            'Content-Length':
              $ref: '#/components/headers/ObjectLength'
          content:
            'application/json':
              schema:
                type: object
              example:
                $ref: '#/components/examples/json/value'
            'application/xml':
              example:
                $ref: '#/components/examples/xml/value'
            'text/plain':
              example:
                $ref: '#/components/examples/text/value'
            'text/csv':
              example:
                $ref: '#/components/examples/csv/value'
            'text/tsv':
              example:
                $ref: '#/components/examples/tsv/value'
            'application/octet-stream':
              example:
                $ref: '#/components/examples/binary/value'
        '404':
          $ref: '#/components/responses/ObjectNotFound'
        '416':
          $ref: '#/components/responses/ObjectRangeNotSatisfiable'
        '429':
          $ref: '#/components/responses/TooManyObjectRequests'
        '415':
          description: Object type do not match
        '409':
          description: 'Content-type missmatch'
        '413':
          $ref: '#/components/responses/ObjectTooLarge'
    delete:
      summary: 'Delete a object'
      description: 'Delete entire object or some range in it'
      parameters:
        - $ref: '#/components/parameters/ObjectId'
        - $ref: '#/components/parameters/ObjectRange'
      responses:
        '200':
          description: Successfully deleted a object or object part
        '404':
          $ref: '#/components/responses/ObjectNotFound'
        '416':
          $ref: '#/components/responses/ObjectRangeNotSatisfiable'
        '429':
          $ref: '#/components/responses/TooManyObjectRequests'

  /batch/delete:
    post:
      summary: 'Create request for object batch deletion'
      description: 'Batch deletion is async process, so we need to start and wait'
      security:
        - ServiceAccount: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDelete'
      responses:
        '201':
          description: 'Query started'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDelete'
  /batch/delete/{id}:
    get:
      summary: 'Get batch delete request status'
      security:
        - ServiceAccount: []
      parameters:
        - name: id
          required: true
          description: Query id
          in: path
          schema:
            type: integer
      responses:
        '201':
          description: Query found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDelete'
        '404':
          description: Query not found


# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/zuker/object-store/v0.0.1
