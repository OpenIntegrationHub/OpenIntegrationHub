{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Component Repository",
    "description" : "Component repository is a service used to manage components in the Open Integration Hub.",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "0.0.6"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "tags" : [ {
    "name" : "components",
    "description" : "Component management"
  } ],
  "paths" : {
    "/components/" : {
      "get" : {
        "tags" : [ "components" ],
        "summary" : "Retrieve all components",
        "description" : "Retrieve all components from the repository.",
        "operationId" : "getComponents",
        "parameters" : [ {
          "name" : "page[size]",
          "in" : "query",
          "description" : "The amount of components per page returned. Defaults to 50.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "page[number]",
          "in" : "query",
          "description" : "The number of the page to be returned. Defaults to 1.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "components" ],
        "summary" : "Create a component",
        "description" : "Create a component",
        "operationId" : "createComponent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/body"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/components/{id}" : {
      "get" : {
        "tags" : [ "components" ],
        "summary" : "Find component by ID",
        "description" : "Returns a component with given ID",
        "operationId" : "getComponentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of component to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/body"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Component with given ID not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "components" ],
        "summary" : "Delete a component",
        "description" : "Delete a component",
        "operationId" : "deleteComponent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of component to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The component was deleted successfully"
          },
          "404" : {
            "description" : "Component with given ID not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "components" ],
        "summary" : "Update a component",
        "description" : "Update a component",
        "operationId" : "updateComponent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of component to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body_1"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/body_1"
                }
              }
            }
          },
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "MutableComponent" : {
        "required" : [ "access", "description", "descriptor", "distribution", "name", "owners" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "My Component"
          },
          "description" : {
            "type" : "string",
            "example" : "My Component"
          },
          "access" : {
            "type" : "string",
            "example" : "private",
            "enum" : [ "private", "public" ]
          },
          "descriptor" : {
            "type" : "object"
          },
          "distribution" : {
            "$ref" : "#/components/schemas/ComponentDistribution"
          },
          "owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Owner"
            }
          }
        }
      },
      "ComponentDistribution" : {
        "example" : {
          "type" : "docker",
          "image" : "openintegrationhub/email",
          "registrySecretId" : "5b62c919fd98ea00112d52e7"
        },
        "allOf" : [ {
          "required" : [ "type" ],
          "type" : "object",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "docker", "slug" ]
            }
          }
        }, {
          "oneOf" : [ {
            "$ref" : "#/components/schemas/ComponentDockerDistribution"
          }, {
            "$ref" : "#/components/schemas/ComponentSlugDistribution"
          } ]
        } ]
      },
      "ComponentDockerDistribution" : {
        "required" : [ "image" ],
        "type" : "object",
        "properties" : {
          "image" : {
            "type" : "string"
          },
          "registrySecretId" : {
            "type" : "string"
          }
        }
      },
      "ComponentSlugDistribution" : {
        "required" : [ "slugUrl" ],
        "type" : "object",
        "properties" : {
          "slugUrl" : {
            "type" : "string"
          }
        }
      },
      "Owner" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "External id of the owner"
          },
          "type" : {
            "type" : "string",
            "description" : "Type to discriminate owner's type"
          }
        }
      },
      "Meta" : {
        "type" : "object",
        "properties" : {
          "page" : {
            "type" : "integer",
            "description" : "Current page (1-based numbering)"
          },
          "perPage" : {
            "type" : "integer",
            "description" : "Number of objects per page"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of objects"
          },
          "totalPages" : {
            "type" : "integer",
            "description" : "Total number of pages"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MutableComponent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Meta"
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MutableComponent"
          }
        }
      },
      "body_1" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MutableComponent"
          }
        }
      }
    },
    "securitySchemes" : {
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}