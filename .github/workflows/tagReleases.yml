# This workflow performs the following steps upon a release:
# - Pulls all services from the monorepo
# - Gets the version which was deployed for the current release
# - Tags each image in Docker Hub with a tag matching the current release

name: Release Versioned Service Images

on:
  release:
    types: [published, released]

jobs:
  get-service-names:
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest
    outputs: 
      matrix: ${{ steps.set-matrix.outputs.matrix}}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Aggregate Services
        id: set-matrix
        working-directory: ./services
        run: |
          array=(*/)
          jsonString={\"service\":[
          for i in "${array[@]}"; do 
            jsonString=$jsonString\"${i%/}\",
          done
          outputString="${jsonString%,}]}"
          echo "::set-output name=matrix::$outputString"
  # Based on https://dille.name/blog/2018/09/20/how-to-tag-docker-images-without-pulling-them/
  tag-release-images:
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest
    needs: get-service-names
    strategy: 
      matrix: 
        ${{ fromJSON(needs.get-service-names.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Create Version
        uses: booxmedialtd/ws-action-parse-semver@v1
        id: semver
        with:
          input_string: $GITHUB_REF
          version_extractor_regex: '\/v(.*)$'
      - name: Get Service Version
        id: service-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: ${{ join([matrix.service,'package.json'],'/') }}
          prop_path: 'version'
      - name: Tag with release version
        uses: javajawa/remote-docker-tag@v1
        with:
          registry: openintegrationhub
          repository: ${{ matrix.service }} 
          existing-tag: ${{ steps.service-version.outputs.prop }} # get from checked out code
          new-tag: ${{steps.semver.outputs.fullversion}}
          auth: ${{secrets.DOCKER_AUTH_TOKEN}}
          
