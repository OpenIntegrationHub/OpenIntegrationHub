version: 2.1

aliases:
  - &node_env
    - image: circleci/node:8-stretch
  - &node_mongo_env
    - image: circleci/node:8-stretch
    - image: circleci/mongo:3.6
  - &run_npm_install
    name: Installing Dependencies
    command: yarn
  - &only_master_filter
    branches:
      only: mastery
  - &yarn_test_steps
      - restore_cache:
          keys:
            - yarn-deps-{{ .Branch }}-{{ .Revision }}
      - run: yarn test
  - &build_steps
      - setup_remote_docker
      - restore_cache:
          keys:
            - yarn-deps-{{ .Branch }}-{{ .Revision }}
      - run: |
          git diff --no-commit-id --name-only -r `git log -n 3 --oneline --pretty=format:"%h" | tail -n1` > gitchanges.txt
          cd ./scripts # needed for compatible with travis implementation
          node getChanges.js
          node build.js
      - save_cache:
          key: build-deps-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/oih
  - &deploy_steps
      - restore_cache:
          keys:
            - build-deps-{{ .Branch }}-{{ .Revision }}
      - run: |
          cd ./scripts  # needed for compatible with travis implementation
          node deploy.js
  - &deploy_steps_prod
      - restore_cache:
          keys:
            - build-deps-{{ .Branch }}-{{ .Revision }}
      - run: |
          cd ./scripts  # needed for compatible with travis implementation
          node deploy_prod.js     
jobs:
  deps:
    docker: *node_env
    working_directory: ~/oih
    steps:
      - checkout:
          path: ~/oih
      - run: *run_npm_install
      - save_cache:
          key: yarn-deps-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/oih
  test:
    docker: *node_env
    steps:
      - run: echo OK
  build:
    docker: *node_env
    working_directory: ~/oih
    steps: *build_steps
  deploy:
    docker: *node_env
    working_directory: ~/oih
    steps: *deploy_steps
  deploy_prod:
    docker: *node_env
    working_directory: ~/oih
    steps: *deploy_steps_prod
  integration-test:
    docker: *node_env
    working_directory: ~/oih/services/integrationtests
    steps: *yarn_test_steps
  webhooks-test:
    docker: *node_mongo_env
    working_directory: ~/oih/services/webhooks
    steps: *yarn_test_steps
  iam-test:
    docker: *node_env
    working_directory: ~/oih/services/iam
    steps: *yarn_test_steps
  meta-data-repository-test:
    docker: *node_env
    working_directory: ~/oih/services/meta-data-repository
    steps: *yarn_test_steps
  component-orchestrator-test:
    docker: *node_mongo_env
    working_directory: ~/oih/services/component-orchestrator
    steps: *yarn_test_steps
  scheduler-test:
    docker: *node_mongo_env
    working_directory: ~/oih/services/scheduler
    steps: *yarn_test_steps
  secret-service-lib-test:
    docker: *node_env
    working_directory: ~/oih/lib/secret-service
    steps: *yarn_test_steps
  lib-backend-commons-lib-test:
    docker: *node_env
    working_directory: ~/oih/lib/backend-commons-lib
    steps: *yarn_test_steps
  lib-component-orchestrator-test:
    docker: *node_env
    working_directory: ~/oih/lib/component-orchestrator
    steps: *yarn_test_steps
  lib-scheduler-test:
    docker: *node_env
    working_directory: ~/oih/lib/scheduler
    steps: *yarn_test_steps
  lib-webhooks-test:
    docker: *node_env
    working_directory: ~/oih/lib/webhooks
    steps: *yarn_test_steps
  flow-repository-test:
    docker: *node_env
    working_directory: ~/oih/services/flow-repository
    steps: *yarn_test_steps
  audit-log-test:
    docker: *node_env
    working_directory: ~/oih/services/audit-log
    steps: *yarn_test_steps
workflows:
  pipeline:
    jobs:
      - deps
      - integration-test:
          requires:
            - deps 
